%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$build/default/debug/main.o
code CODE 0 5 5 20 2 1
intentry CODE 0 4 4 1 2 1
reset_vec CODE 0 0 0 2 2 1
config CONFIG 4 8007 8007 5 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 120-16F 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 120-16F 1
CONST 2-3 2
CONST 25-7FF 2
ENTRY 2-3 2
ENTRY 25-7FF 2
IDLOC 8000-8003 2
SFR10 500-56F 1
SFR11 580-5EF 1
SFR12 600-66F 1
SFR13 680-6EF 1
SFR14 700-76F 1
SFR15 780-7EF 1
SFR16 800-86F 1
SFR17 880-8EF 1
SFR18 900-96F 1
SFR19 980-9EF 1
SFR20 A00-A6F 1
SFR21 A80-AEF 1
SFR22 B00-B6F 1
SFR23 B80-BEF 1
SFR24 C00-C6F 1
SFR25 C80-CEF 1
SFR26 D00-D6F 1
SFR27 D80-DEF 1
SFR28 E00-E6F 1
SFR29 E80-EEF 1
SFR30 F00-F6F 1
SFR31 F80-FEF 1
SFR32 1000-106F 1
SFR33 1080-10EF 1
SFR34 1100-116F 1
SFR35 1180-11EF 1
SFR36 1200-126F 1
SFR37 1280-12EF 1
SFR38 1300-136F 1
SFR39 1380-13EF 1
SFR40 1400-146F 1
SFR41 1480-14EF 1
SFR42 1500-156F 1
SFR43 1580-15EF 1
SFR44 1600-166F 1
SFR45 1680-16EF 1
SFR46 1700-176F 1
SFR47 1780-17EF 1
SFR48 1800-186F 1
SFR49 1880-18EF 1
SFR50 1900-196F 1
SFR51 1980-19EF 1
SFR52 1A00-1A6F 1
SFR53 1A80-1AEF 1
SFR54 1B00-1B6F 1
SFR55 1B80-1BEF 1
SFR56 1C00-1C6F 1
SFR57 1C80-1CEF 1
SFR58 1D00-1D6F 1
SFR59 1D80-1DEF 1
SFR60 1E00-1E6F 1
SFR61 1E80-1EEF 1
SFR62 1F00-1F6F 1
SFR63 1F80-1FEF 1
CODE 2-3 2
CODE 25-7FF 2
SFR0 4-7 1
SFR1 80-9F 1
SFR2 100-11F 1
SFR3 180-1EF 1
SFR4 200-26F 1
SFR5 280-2EF 1
SFR6 300-36F 1
SFR7 380-3EF 1
SFR8 400-46F 1
SFR9 480-4EF 1
BIGRAM 2000-20EF 1
COMMON 70-7F 1
STRCODE 2-3 2
STRCODE 25-7FF 2
STRING 2-3 2
STRING 25-7FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$build/default/debug/main.o
4 intentry CODE >39:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
0 reset_vec CODE >36:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1 reset_vec CODE >37:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
5 code CODE >43:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
6 code CODE >44:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
7 code CODE >45:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
8 code CODE >46:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
9 code CODE >47:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
A code CODE >48:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
B code CODE >49:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
C code CODE >50:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
D code CODE >51:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
E code CODE >52:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
F code CODE >53:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
10 code CODE >55:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
11 code CODE >56:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
12 code CODE >57:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
13 code CODE >58:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
14 code CODE >59:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
15 code CODE >60:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
16 code CODE >61:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
17 code CODE >62:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
18 code CODE >63:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
19 code CODE >64:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1A code CODE >65:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1B code CODE >66:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1C code CODE >67:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1D code CODE >68:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1E code CODE >69:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
1F code CODE >70:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
20 code CODE >71:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
21 code CODE >72:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
22 code CODE >73:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
23 code CODE >74:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
24 code CODE >75:C:\Users\USER_PRIME\MPLABXProjects\My First PICject.X\main.asm
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Hspace_0 25 0 ABS 0 - -
__Hspace_1 0 0 ABS 0 - -
__Hspace_4 10013 0 ABS 0 - -
__Hudata_bank0 0 0 ABS 0 udata_bank0 -
__Hudata_bank1 0 0 ABS 0 udata_bank1 -
__Hudata_bank2 0 0 ABS 0 udata_bank2 -
__Hpowerup 0 0 ABS 0 powerup -
__Hfunctab 0 0 ABS 0 functab -
__Hcinit 0 0 ABS 0 cinit -
__Hudata 0 0 ABS 0 udata -
__Hconfig 10018 0 CONFIG 4 config -
__Lcinit 0 0 ABS 0 cinit -
__Ludata 0 0 ABS 0 udata -
__Hcode 0 0 ABS 0 code -
__Hdata 0 0 ABS 0 data -
__Hinit A 0 CODE 0 init -
__Lcode 0 0 ABS 0 code -
__Ldata 0 0 ABS 0 data -
__Linit A 0 CODE 0 init -
__S0 25 0 ABS 0 - -
__S1 0 0 ABS 0 - -
__Lintentry 8 0 CODE 0 intentry -
__Lconfig 0 0 CONFIG 4 config -
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_4 0 0 ABS 0 - -
__Lend_init A 0 CODE 0 end_init -
__Hintentry A 0 CODE 0 intentry -
__Hreset_vec 4 0 CODE 0 reset_vec -
__Lpowerup 0 0 ABS 0 powerup -
__Ludata_bank0 0 0 ABS 0 udata_bank0 -
__Ludata_bank1 0 0 ABS 0 udata_bank1 -
__Ludata_bank2 0 0 ABS 0 udata_bank2 -
__Lreset_vec 0 0 CODE 0 reset_vec -
__Lfunctab 0 0 ABS 0 functab -
__Hend_init A 0 CODE 0 end_init -
__Hudata_shr 0 0 ABS 0 udata_shr -
__Ludata_shr 0 0 ABS 0 udata_shr -
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
intentry 0 4 8 21 2
reset_vec 0 0 0 2 2
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
